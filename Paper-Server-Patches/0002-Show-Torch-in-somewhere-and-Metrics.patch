From 72b099040d1f138a6b36e2e22ab20284731c6bc4 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Tue, 28 Jun 2016 17:18:45 +0800
Subject: [PATCH] Show Torch in somewhere and Metrics


diff --git a/pom.xml b/pom.xml
index 927418f..42cfc01 100644
--- a/pom.xml
+++ b/pom.xml
@@ -4,9 +4,9 @@
     <groupId>net.techcable.tacospigot</groupId>
     <artifactId>server</artifactId>
     <packaging>jar</packaging>
-    <version>1.9.4-R0.1</version>
-    <name>TacoSpigot</name>
-    <url>https://github.com/TacoSpigot/TacoSpigot</url>
+    <version>1.9.4-R1.8</version>
+    <name>Torch</name>
+    <url>https://github.com/TorchSpigot/Torch</url>
 
     <properties>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
diff --git a/src/main/java/net/minecraft/server/EULA.java b/src/main/java/net/minecraft/server/EULA.java
index fac5f88..e34ca53 100644
--- a/src/main/java/net/minecraft/server/EULA.java
+++ b/src/main/java/net/minecraft/server/EULA.java
@@ -21,14 +21,14 @@ public class EULA {
 
     private boolean a(File file) {
         FileInputStream fileinputstream = null;
-        boolean flag = false;
+        boolean flag = true; // Torch - EULA - auto agreement
 
         try {
             Properties properties = new Properties();
 
             fileinputstream = new FileInputStream(file);
             properties.load(fileinputstream);
-            flag = Boolean.parseBoolean(properties.getProperty("eula", "false"));
+            flag = Boolean.parseBoolean(properties.getProperty("eula", "true")); // Torch - auto
         } catch (Exception exception) {
             EULA.a.warn("Failed to load " + file);
             this.b();
@@ -50,7 +50,7 @@ public class EULA {
             Properties properties = new Properties();
 
             fileoutputstream = new FileOutputStream(this.b);
-            properties.setProperty("eula", "false");
+            properties.setProperty("eula", "true"); // Torch - auto
             properties.store(fileoutputstream, "By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula)." +
                     "\nand also agreeing that tacos are tasty.");  // Paper - fix lag
         } catch (Exception exception) {
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 15cabf2..f065dae 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1087,7 +1087,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
     }
 
     public String getServerModName() {
-        return "TacoSpigot"; // TacoSpigot - TacoSpigot > //Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
+        return "Torch"; // Torch - Torch > // TacoSpigot - TacoSpigot > // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
     }
 
     public CrashReport b(CrashReport crashreport) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 44acbea..dc3598e 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -126,7 +126,7 @@ import net.md_5.bungee.api.chat.BaseComponent;
 
 public final class CraftServer implements Server {
     private static final Player[] EMPTY_PLAYER_ARRAY = new Player[0];
-    private final String serverName = "Paper";
+    private final String serverName = "Torch"; // Torch
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
diff --git a/src/main/java/org/spigotmc/Metrics.java b/src/main/java/org/spigotmc/Metrics.java
index f0b24dc..2ccdcf8 100644
--- a/src/main/java/org/spigotmc/Metrics.java
+++ b/src/main/java/org/spigotmc/Metrics.java
@@ -344,7 +344,7 @@ public class Metrics {
      */
     private void postPlugin(final boolean isPing) throws IOException {
         // Server software specific section
-        String pluginName = "TacoSpigot"; // Paper - Keep old name for legacy data // TacoSpigot - Its *my* usage data
+        String pluginName = "TorchSpigot"; // Paper - Keep old name for legacy data // TacoSpigot - Its *my* usage data // Torch - mod name
         boolean onlineMode = Bukkit.getServer().getOnlineMode(); // TRUE if online mode is enabled
         String pluginVersion = (Metrics.class.getPackage().getImplementationVersion() != null) ? Metrics.class.getPackage().getImplementationVersion() : "unknown";
         String serverVersion = Bukkit.getVersion();
diff --git a/src/main/java/org/spigotmc/WatchdogThread.java b/src/main/java/org/spigotmc/WatchdogThread.java
index fb57e0d..6f05ac4 100644
--- a/src/main/java/org/spigotmc/WatchdogThread.java
+++ b/src/main/java/org/spigotmc/WatchdogThread.java
@@ -19,7 +19,7 @@ public class WatchdogThread extends Thread
 
     private WatchdogThread(long timeoutTime, boolean restart)
     {
-        super( "Paper Watchdog Thread" );
+        super( "Torch Watchdog Thread" ); // Torch
         this.timeoutTime = timeoutTime;
         this.restart = restart;
     }
@@ -56,9 +56,9 @@ public class WatchdogThread extends Thread
             {
                 Logger log = Bukkit.getServer().getLogger();
                 log.log( Level.SEVERE, "The server has stopped responding!" );
-                log.log( Level.SEVERE, "Please report this to https://aquifermc.org/" );
+                log.log( Level.SEVERE, "Please report this to https://github.com/TorchSpigot/Torch/issues" ); // Torch
                 log.log( Level.SEVERE, "Be sure to include ALL relevant console errors and Minecraft crash reports" );
-                log.log( Level.SEVERE, "Paper version: " + Bukkit.getServer().getVersion() );
+                log.log( Level.SEVERE, "Torch version: " + Bukkit.getServer().getVersion() ); // Torch
                 //
                 if(net.minecraft.server.World.haveWeSilencedAPhysicsCrash)
                 {
@@ -68,7 +68,7 @@ public class WatchdogThread extends Thread
                 }
                 //
                 log.log( Level.SEVERE, "------------------------------" );
-                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to Paper!):" );
+                log.log( Level.SEVERE, "Server thread dump (Look for plugins here before reporting to TorchSpigot!):" ); // Torch
                 dumpThread( ManagementFactory.getThreadMXBean().getThreadInfo( MinecraftServer.getServer().primaryThread.getId(), Integer.MAX_VALUE ), log );
                 log.log( Level.SEVERE, "------------------------------" );
                 //
-- 
2.8.2.windows.1

