From ac126fbdadad5f2e0ce0fed4894e3a0ff1c180b8 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sat, 16 Jul 2016 06:27:18 +0800
Subject: [PATCH] Archery attributes


diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 5b195e9..76fe9df 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -91,12 +91,22 @@ public abstract class EntityArrow extends Entity implements IProjectile {
         float f5 = -MathHelper.sin(f1 * 0.017453292F) * MathHelper.cos(f * 0.017453292F);
         float f6 = -MathHelper.sin(f * 0.017453292F);
         float f7 = MathHelper.cos(f1 * 0.017453292F) * MathHelper.cos(f * 0.017453292F);
+		
+		// SportBukkit start - use attributes
+        final double velocityTransfer;
+        if(entity instanceof EntityLiving) {
+            final EntityLiving entityLiving = (EntityLiving) entity;
+            f4 = (float) entityLiving.getAttributeInstance(EntityLiving.ARROW_ACCURACY).getValue();
+            velocityTransfer = entityLiving.getAttributeInstance(EntityLiving.ARROW_VELOCITY_TRANSFER).getValue();
+        } else {
+            velocityTransfer = 1;
+        }
 
         this.shoot((double) f5, (double) f6, (double) f7, f3, f4);
-        this.motX += entity.motX;
-        this.motZ += entity.motZ;
+        this.motX += entity.motX * velocityTransfer;
+        this.motZ += entity.motZ * velocityTransfer;
         if (!entity.onGround) {
-            this.motY += entity.motY;
+            this.motY += entity.motY * velocityTransfer;
         }
 
     }
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index fdf8bb8..440171d 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -46,6 +46,8 @@ public abstract class EntityLiving extends Entity {
     public final Map<MobEffectList, MobEffect> effects = Maps.newHashMap();
     private final ItemStack[] bt = new ItemStack[2];
     private final ItemStack[] bu = new ItemStack[4];
+	public static final IAttribute ARROW_ACCURACY = new AttributeRanged(null, "sportbukkit.arrowAccuracy", 1, 0, Double.MAX_VALUE);
+    public static final IAttribute ARROW_VELOCITY_TRANSFER = new AttributeRanged(null, "sportbukkit.arrowVelocityTransfer", 1, Double.MIN_VALUE, Double.MAX_VALUE);    
     public boolean au;
     public EnumHand av;
     public int aw;
@@ -151,6 +153,8 @@ public abstract class EntityLiving extends Entity {
         this.getAttributeMap().b(GenericAttributes.MOVEMENT_SPEED);
         this.getAttributeMap().b(GenericAttributes.g);
         this.getAttributeMap().b(GenericAttributes.h);
+		this.getAttributeMap().b(ARROW_ACCURACY);
+        this.getAttributeMap().b(ARROW_VELOCITY_TRANSFER);
     }
 
     protected void a(double d0, boolean flag, IBlockData iblockdata, BlockPosition blockposition) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
index 2e6c566..62d6352 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
@@ -32,6 +32,8 @@ public final class CraftItemFactory implements ItemFactory {
             .add("generic.luck")
             .add("horse.jumpStrength")
             .add("zombie.spawnReinforcements")
+			.add("sportbukkit.arrowAccuracy")
+            .add("sportbukkit.arrowVelocityTransfer")
             .build();
     }
 
-- 
2.8.2.windows.1

