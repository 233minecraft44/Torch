From 203e0108d9388c5c52f7ad1b783c0a85986a555e Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Mon, 1 Aug 2016 00:16:47 +0800
Subject: [PATCH] Speedup packet send


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index f8341a2..3195c60 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -23,6 +23,7 @@ import org.bukkit.craftbukkit.Main;
 import org.bukkit.craftbukkit.chunkio2.impl.CraftNBTStorage;
 import de.minetick.Migot;
 import com.domnian.paperdragon.DragonConfig;
+import java.util.concurrent.RecursiveAction;
 
 // Migot start
 import de.minetick.AutoSaveJob;
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 865c642..cc95786 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -22,6 +22,7 @@ import io.netty.util.AttributeKey; // Torch
 
 import com.google.common.collect.Sets;
 import java.util.HashSet;
+import java.util.concurrent.RecursiveAction;
 
 // CraftBukkit start
 import java.util.concurrent.ExecutionException;
@@ -1088,8 +1089,19 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
         }
 
     }
+	
+	class SendTask extends RecursiveAction {
+		Packet<?> packet;
+        SendTask(Packet<?> packet) { this.packet = packet; }
+        @Override protected void compute() { sendPacket_sub(packet); }
+    }
+	
+	public void sendPacket(Packet<?> packet) {
+		SendTask task = new SendTask(packet);
+		task.fork();
+	}
 
-    public void sendPacket(final Packet<?> packet) {
+    public void sendPacket_sub(final Packet<?> packet) {
         if (packet instanceof PacketPlayOutChat) {
             PacketPlayOutChat packetplayoutchat = (PacketPlayOutChat) packet;
             EntityHuman.EnumChatVisibility entityhuman_enumchatvisibility = this.player.getChatFlags();
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 99bb20e..0bbf30b 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -18,6 +18,7 @@ import java.util.UUID;
 import javax.annotation.Nullable;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import java.util.concurrent.RecursiveAction;
 import com.google.common.collect.Sets;
 
 // CraftBukkit start
@@ -87,6 +88,19 @@ public abstract class PlayerList {
         this.l.a(false);
         this.maxPlayers = 8;
     }
+	
+	/*
+	class ListTask extends RecursiveAction {
+		NetworkManager networkmanager; EntityPlayer entityplayer;
+        ListTask(NetworkManager networkmanager, EntityPlayer entityplayer) { this.networkmanager = networkmanager; this.entityplayer = entityplayer; }
+        @Override protected void compute() { a_task(networkmanager, entityplayer); }
+    }
+	
+	public void a(NetworkManager networkmanager, EntityPlayer entityplayer) {
+		ListTask task = new ListTask(networkmanager, entityplayer);
+		task.fork();
+	}
+	*/
 
     public void a(NetworkManager networkmanager, EntityPlayer entityplayer) {
         GameProfile gameprofile = entityplayer.getProfile();
@@ -148,6 +162,7 @@ public abstract class PlayerList {
         this.a(entityplayer, (EntityPlayer) null, worldserver);
         PlayerConnection playerconnection = new PlayerConnection(this.server, networkmanager, entityplayer);
 
+		// synchronized(this) {
         playerconnection.sendPacket(new PacketPlayOutLogin(entityplayer.getId(), entityplayer.playerInteractManager.getGameMode(), worlddata.isHardcore(), worldserver.worldProvider.getDimensionManager().getDimensionID(), worldserver.getDifficulty(), this.getMaxPlayers(), worlddata.getType(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
         entityplayer.getBukkitEntity().sendSupportedChannels(); // CraftBukkit
         playerconnection.sendPacket(new PacketPlayOutCustomPayload("MC|Brand", (new PacketDataSerializer(Unpooled.buffer())).a(this.getServer().getServerModName())));
@@ -161,6 +176,7 @@ public abstract class PlayerList {
         entityplayer.getStatisticManager().updateStatistics(entityplayer);
         this.sendScoreboard((ScoreboardServer) worldserver.getScoreboard(), entityplayer);
         this.server.aC();
+		// }
         // CraftBukkit start - login message is handled in the event
         // ChatMessage chatmessage;
 
@@ -175,7 +191,9 @@ public abstract class PlayerList {
 
         // chatmessage.getChatModifier().setColor(EnumChatFormat.YELLOW);
         // this.sendMessage(chatmessage);
-        this.onPlayerJoin(entityplayer, joinMessage);
+		// synchronized(this) {
+			this.onPlayerJoin(entityplayer, joinMessage);
+		// }
         // CraftBukkit end
         worldserver = server.getWorldServer(entityplayer.dimension);  // CraftBukkit - Update in case join event changed it
         playerconnection.a(entityplayer.locX, entityplayer.locY, entityplayer.locZ, entityplayer.yaw, entityplayer.pitch);
-- 
2.8.2.windows.1

