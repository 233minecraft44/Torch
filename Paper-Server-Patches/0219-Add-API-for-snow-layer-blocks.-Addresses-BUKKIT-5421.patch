From 59c93582dd8486215d38d8b15758c7aeada27fbe Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sun, 7 Aug 2016 02:52:54 +0800
Subject: [PATCH] Add API for snow layer blocks. Addresses BUKKIT-5421


diff --git a/src/main/java/org/bukkit/Material.java b/src/main/java/org/bukkit/Material.java
index ee577dc..e834483 100644
--- a/src/main/java/org/bukkit/Material.java
+++ b/src/main/java/org/bukkit/Material.java
@@ -17,6 +17,7 @@ import org.bukkit.material.Command;
 import org.bukkit.material.Comparator;
 import org.bukkit.material.Crops;
 import org.bukkit.material.DetectorRail;
+import org.bukkit.material.SnowLayer;
 import org.bukkit.material.Diode;
 import org.bukkit.material.Dispenser;
 import org.bukkit.material.Door;
@@ -146,7 +147,7 @@ public enum Material {
     REDSTONE_TORCH_OFF(75, RedstoneTorch.class),
     REDSTONE_TORCH_ON(76, RedstoneTorch.class),
     STONE_BUTTON(77, Button.class),
-    SNOW(78),
+    SNOW(78, SnowLayer.class),
     ICE(79),
     SNOW_BLOCK(80),
     CACTUS(81, MaterialData.class),
diff --git a/src/main/java/org/bukkit/material/SnowLayer.java b/src/main/java/org/bukkit/material/SnowLayer.java
new file mode 100644
index 0000000..c458cde
--- /dev/null
+++ b/src/main/java/org/bukkit/material/SnowLayer.java
@@ -0,0 +1,108 @@
+package org.bukkit.material;
+
+import org.bukkit.Material;
+
+/**
+ * Represents a snow layer block.
+ */
+public class SnowLayer extends MaterialData {
+    public SnowLayer() {
+        super(Material.SNOW);
+    }
+
+    /**
+     *
+     * @deprecated magic value
+     */
+    public SnowLayer(final int type) {
+        super(type);
+    }
+
+    public SnowLayer(final Material material) {
+        super(material);
+    }
+
+    /**
+     *
+     * @deprecated magic value
+     */
+    public SnowLayer(final int type, final byte data) {
+        super(type, data);
+    }
+
+    /**
+     *
+     * @deprecated magic value
+     */
+    public SnowLayer(final Material material, final byte data) {
+        super(material, data);
+    }
+
+    /**
+     * Adds a layer to the current snow layer. If this goes over
+     * the max height for a snow layer the current height will
+     * not be affected.
+     *
+     * @return true if a layer was added, false otherwise
+     */
+    public boolean addLayer() {
+        byte data = getData();
+
+        if (data < 7) {
+            data++;
+            setData(data);
+
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    /**
+     * Removes a layer from the current snow layer. If the resulting
+     * height were to go below the first layer, then the block's height
+     * will not be affected.
+     *
+     * @return true if a layer was removed, false otherwise
+     */
+    public boolean removeLayer() {
+        byte data = getData();
+
+        if (data > 0) {
+            data--;
+            setData(data);
+
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    /**
+     * Gets the height of this snow layer
+     * @return the height of this snow layer
+     */
+    public byte getHeight() {
+        return getData();
+    }
+
+    /**
+     * Sets the height of this snow layer
+     * @param height the height of the new snow layer
+     */
+    public void setHeight(int height) {
+        if (height < 8) {
+            setData((byte) height);
+        }
+    }
+
+    @Override
+    public String toString() {
+        return getHeight() + " " + super.toString();
+    }
+
+    @Override
+    public MaterialData clone() {
+        return (SnowLayer) super.clone();
+    }
+}
\ No newline at end of file
-- 
2.8.2.windows.1

