From c57a868543f32dcaa35418b8aa99ef88bbf0ab7a Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Fri, 1 Jul 2016 17:11:00 +0800
Subject: [PATCH] multi threaded org.hose


diff --git a/src/main/java/org/hose/ChunkFlush_Pool.java b/src/main/java/org/hose/ChunkFlush_Pool.java
new file mode 100644
index 0000000..2928dab
--- /dev/null
+++ b/src/main/java/org/hose/ChunkFlush_Pool.java
@@ -0,0 +1,53 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.concurrent.RecursiveAction;
+import net.minecraft.server.PlayerChunk;
+
+/**
+ *
+ * @author softpak
+ */
+public class ChunkFlush_Pool extends RecursiveAction {//need to use callable
+    List<PlayerChunk> chunkflush_list;
+    
+    public ChunkFlush_Pool(List<PlayerChunk> chunkflush_list){
+        this.chunkflush_list = chunkflush_list;
+    }
+    
+    @Override
+    protected void compute() {
+        List<RecursiveAction> forks = new LinkedList();
+        for (PlayerChunk pc : chunkflush_list) {
+            chunkflush task = new chunkflush(pc);
+            forks.add(task);
+            task.fork();
+            //task.join();
+        }
+        /*
+        for (RecursiveAction task : forks) {
+            task.join();
+        }*/
+    }
+    
+    
+    class chunkflush extends RecursiveAction {
+        PlayerChunk pc;
+        
+        chunkflush(PlayerChunk pc) {
+            this.pc = pc;
+        }
+        
+        @Override
+        protected void compute() {
+            pc.d();
+        }
+                 
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/org/hose/ChunkGen_Pool.java b/src/main/java/org/hose/ChunkGen_Pool.java
new file mode 100644
index 0000000..53a6695
--- /dev/null
+++ b/src/main/java/org/hose/ChunkGen_Pool.java
@@ -0,0 +1,54 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.LinkedList;
+import java.util.List;
+import java.util.concurrent.RecursiveAction;
+import net.minecraft.server.WorldServer;
+
+/**
+ *
+ * @author softpak
+ */
+public class ChunkGen_Pool extends RecursiveAction {
+    WorldServer worldserver;
+    List<int[]> position;
+    
+    public ChunkGen_Pool(WorldServer worldserver, List<int[]> position){
+        this.worldserver = worldserver;
+        this.position = position;
+        
+    }
+    
+    @Override
+    protected void compute() {
+        List<RecursiveAction> forks = new LinkedList();
+        for (int[] pt : position) {
+            chunkgen task = new chunkgen(worldserver, pt);
+            forks.add(task);
+            task.fork();
+        }
+        
+    }
+    
+    
+    class chunkgen extends RecursiveAction {
+        WorldServer worldserver;
+        int[] pt;
+        
+        chunkgen(WorldServer worldserver, int[] pt) {
+            this.worldserver = worldserver;
+            this.pt = pt;
+        }
+        
+        @Override
+        protected void compute() {
+            worldserver.getChunkProviderServer().getChunkAt(pt[0], pt[1]);
+        }
+                 
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/org/hose/ChunkPopulate_Pool.java b/src/main/java/org/hose/ChunkPopulate_Pool.java
new file mode 100644
index 0000000..dc2fa9a
--- /dev/null
+++ b/src/main/java/org/hose/ChunkPopulate_Pool.java
@@ -0,0 +1,35 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.Random;
+import java.util.concurrent.RecursiveAction;
+import org.bukkit.Chunk;
+import org.bukkit.World;
+
+/**
+ *
+ * @author softpak
+ */
+public class ChunkPopulate_Pool extends RecursiveAction {//need to use callable
+    World world;
+    Random random;
+    Chunk chunk;
+    org.bukkit.generator.BlockPopulator populator;
+    
+    public ChunkPopulate_Pool(World world, Random random, Chunk chunk, org.bukkit.generator.BlockPopulator populator){
+        this.world = world;
+        this.random = random;
+        this.chunk = chunk;
+        this.populator = populator;
+    }
+    
+    @Override
+    protected void compute() {
+        populator.populate(world, random, chunk);
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/org/hose/GE_Pool.java b/src/main/java/org/hose/GE_Pool.java
new file mode 100644
index 0000000..d651deb
--- /dev/null
+++ b/src/main/java/org/hose/GE_Pool.java
@@ -0,0 +1,32 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.List;
+import java.util.concurrent.RecursiveAction;
+import java.util.concurrent.RecursiveTask;
+import net.minecraft.server.Entity;
+import net.minecraft.server.EntityLiving;
+import net.minecraft.server.IEntitySelector;
+import net.minecraft.server.World;
+
+
+/**
+ *
+ * @author softpak
+ */
+public class GE_Pool extends RecursiveTask<List> {
+    EntityLiving el;
+    
+    public GE_Pool(EntityLiving el){
+        this.el = el;
+    }
+    
+    @Override
+    protected List compute() {
+        return el.world.getEntities(el, el.getBoundingBox(), IEntitySelector.a(el));
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/org/hose/TE_Pool.java b/src/main/java/org/hose/TE_Pool.java
new file mode 100644
index 0000000..32c5f25
--- /dev/null
+++ b/src/main/java/org/hose/TE_Pool.java
@@ -0,0 +1,34 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.List;
+import java.util.concurrent.RecursiveAction;
+import java.util.concurrent.RecursiveTask;
+import net.minecraft.server.Entity;
+import net.minecraft.server.World;
+
+
+/**
+ *
+ * @author softpak
+ */
+public class TE_Pool extends RecursiveTask<List> {
+    Entity entity;
+    double d0, d1, d2;
+    
+    public TE_Pool(Entity entity, double d0, double d1, double d2){
+        this.entity = entity;
+        this.d0 = d0;
+        this.d1 = d1;
+        this.d2 = d2;
+    }
+    
+    @Override
+    protected List compute() {
+        return entity.world.getCubes(entity, entity.getBoundingBox().a(d0, d1, d2));
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/org/hose/Tick_Pool.java b/src/main/java/org/hose/Tick_Pool.java
new file mode 100644
index 0000000..8f87093
--- /dev/null
+++ b/src/main/java/org/hose/Tick_Pool.java
@@ -0,0 +1,32 @@
+/*
+ * To change this license header, choose License Headers in Project Properties.
+ * To change this template file, choose Tools | Templates
+ * and open the template in the editor.
+ */
+package org.hose;
+
+import java.util.concurrent.RecursiveAction;
+import net.minecraft.server.Entity;
+import net.minecraft.server.World;
+
+
+/**
+ *
+ * @author softpak
+ */
+public class Tick_Pool extends RecursiveAction {
+    Entity entity;
+    World world;
+    
+    public Tick_Pool(Entity entity){
+        this.entity = entity;
+        //this.world = world;
+        
+    }
+    
+    @Override
+    protected void compute() {
+        entity.U();
+    }
+    
+}
\ No newline at end of file
-- 
2.8.2.windows.1

