From b7748ba11adc7a327de55db3557dfe9756328b70 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sun, 26 Jun 2016 02:29:16 +0800
Subject: [PATCH] Simplify getEntity by UUID


diff --git a/src/main/java/net/minecraft/server/BlockStateList.java b/src/main/java/net/minecraft/server/BlockStateList.java
index e3acaf8..6246428 100644
--- a/src/main/java/net/minecraft/server/BlockStateList.java
+++ b/src/main/java/net/minecraft/server/BlockStateList.java
@@ -154,7 +154,6 @@ public class BlockStateList {
         private final Block a;
         // TacoSpigot start
         private final ImmutableMap<IBlockState<?>, Comparable<?>> bAsImmutableMap;
-        private Table<IBlockState<?>, Comparable<?>, IBlockData> c;
         private final SimpleMap<IBlockState<?>, Comparable<?>> b;
         private SimpleTable<IBlockState, Comparable, IBlockData> c;
         // TacoSpigot end
@@ -242,21 +241,21 @@ public class BlockStateList {
                 }
 
                 // TacoSpigot start
-                if (TacoSpigotConfig.useArraysForBlockStates) {
-                    // I had some 'fun' getting this to work >:(
-                     ImmutableArrayTable<IBlockState, Comparable, IBlockData> arrayTable = new ImmutableArrayTable<IBlockState, Comparable, IBlockData> (
-                            IBlockState::getId,
-                            BlockState::getById,
-                            IBlockState::getValueId,
-                            IBlockState::getByValueId,
-                            hashbasedtable
-                    );
-					this.c = (row, column) -> arrayTable.get(row.getId(), row.getValueId(column));
-                } else {
-                    ImmutableTable<IBlockState, Comparable, IBlockData> immutableTable = ImmutableTable.copyOf(hashbasedtable);
-                    this.c = immutableTable::get;
-                }
-                // TacoSpigot end
+              if (TacoSpigotConfig.useArraysForBlockStates) {
+                  // I had some 'fun' getting this to work >:(
+                  ImmutableArrayTable<IBlockState, Comparable, IBlockData> arrayTable = new ImmutableArrayTable<IBlockState, Comparable, IBlockData> (
+                          IBlockState::getId,
+                          BlockState::getById,
+                          IBlockState::getValueId,
+                          IBlockState::getByValueId,
+                          hashbasedtable
+                  );
+                  this.c = (row, column) -> arrayTable.get(row.getId(), row.getValueId(column));
+              } else {
+                  ImmutableTable<IBlockState, Comparable, IBlockData> immutableTable = ImmutableTable.copyOf(hashbasedtable);
+                  this.c = immutableTable::get;
+              }
+              // TacoSpigot end
             }
         }
 
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index f065dae..fda685b 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1520,7 +1520,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             if (worldserver != null) {
                 Entity entity = worldserver.getEntity(uuid);
 
-                if (entity != null) {
+                if (entity != null && entity.isAlive()) {
                     return entity;
                 }
             }
@@ -1598,19 +1598,6 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
     }
     // CraftBukkit end
 
-    // Paper start
-    public Entity getEntity(UUID uuid) {
-        Entity entity;
-        for (WorldServer world : worldServer) {
-            if (world == null) {
-                continue;
-            }
-            entity = world.getEntity(uuid);
-            if (entity != null && !entity.dead) {
-                return entity;
-            }
-        }
-        return null;
-    }
-    // Paper end
+	public Entity getEntity(UUID uuid) { return this.a(uuid); } // Paper - OBFHELPER
+	
 }
-- 
2.8.2.windows.1

