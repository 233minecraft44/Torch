From d8dffde8f41d06c60ae623d5250505036b13bf7a Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sat, 2 Jul 2016 07:49:54 +0800
Subject: [PATCH] SPIGOT-1039, misc SPIGOT-1373, miscs


diff --git a/src/main/java/net/minecraft/server/PathfinderGoalTempt.java b/src/main/java/net/minecraft/server/PathfinderGoalTempt.java
new file mode 100644
index 0000000..a04a4b8
--- /dev/null
+++ b/src/main/java/net/minecraft/server/PathfinderGoalTempt.java
@@ -0,0 +1,117 @@
+package net.minecraft.server;
+
+import com.google.common.collect.Sets;
+import java.util.Set;
+import javax.annotation.Nullable;
+
+import org.bukkit.craftbukkit.entity.CraftLivingEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.EntityTargetLivingEntityEvent;
+
+public class PathfinderGoalTempt extends PathfinderGoal {
+
+    private EntityCreature a;
+    private double b;
+    private double c;
+    private double d;
+    private double e;
+    private double f;
+    private double g;
+    private EntityLiving h; // CraftBukkit
+    private int i;
+    private boolean j;
+    private Set<Item> k;
+    private boolean l;
+
+    public PathfinderGoalTempt(EntityCreature entitycreature, double d0, Item item, boolean flag) {
+        this(entitycreature, d0, flag, Sets.newHashSet(new Item[] { item}));
+    }
+
+    public PathfinderGoalTempt(EntityCreature entitycreature, double d0, boolean flag, Set<Item> set) {
+        this.a = entitycreature;
+        this.b = d0;
+        this.k = set;
+        this.l = flag;
+        this.a(3);
+        if (!(entitycreature.getNavigation() instanceof Navigation)) {
+            throw new IllegalArgumentException("Unsupported mob type for TemptGoal");
+        }
+    }
+
+    public boolean a() {
+        if (this.i > 0) {
+            --this.i;
+            return false;
+        } else {
+            this.h = this.a.world.findNearbyPlayer(this.a, 10.0D);
+             // CraftBukkit start
+            // PAIL: rename
+            boolean tempt = this.h == null ? false : this.a(this.h.getItemInMainHand()) || this.a(this.h.getItemInOffHand());
+            if (tempt) {
+                EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this.a, this.h, EntityTargetEvent.TargetReason.TEMPT);
+                if (event.isCancelled()) {
+                    return false;
+                }
+                this.h = ((CraftLivingEntity) event.getTarget()).getHandle();
+            }
+            return tempt;
+            // CraftBukkit end
+        }
+    }
+
+    protected boolean a(@Nullable ItemStack itemstack) {
+        return itemstack == null ? false : this.k.contains(itemstack.getItem());
+    }
+
+    public boolean b() {
+        if (this.l) {
+            if (this.a.h(this.h) < 36.0D) {
+                if (this.h.e(this.c, this.d, this.e) > 0.010000000000000002D) {
+                    return false;
+                }
+
+                if (Math.abs((double) this.h.pitch - this.f) > 5.0D || Math.abs((double) this.h.yaw - this.g) > 5.0D) {
+                    return false;
+                }
+            } else {
+                this.c = this.h.locX;
+                this.d = this.h.locY;
+                this.e = this.h.locZ;
+            }
+
+            this.f = (double) this.h.pitch;
+            this.g = (double) this.h.yaw;
+        }
+
+        return this.a();
+    }
+
+    public void c() {
+        this.c = this.h.locX;
+        this.d = this.h.locY;
+        this.e = this.h.locZ;
+        this.j = true;
+    }
+
+    public void d() {
+        this.h = null;
+        this.a.getNavigation().o();
+        this.i = 100;
+        this.j = false;
+    }
+
+    public void e() {
+        this.a.getControllerLook().a(this.h, (float) (this.a.cF() + 20), (float) this.a.N());
+        if (this.a.h(this.h) < 6.25D) {
+            this.a.getNavigation().o();
+        } else {
+            this.a.getNavigation().a((Entity) this.h, this.b);
+        }
+
+    }
+
+    public boolean f() {
+        return this.j;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 987e393..d342340 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -401,6 +401,8 @@ public abstract class PlayerList {
         cserver.getPluginManager().callEvent(playerQuitEvent);
         entityplayer.getBukkitEntity().disconnect(playerQuitEvent.getQuitMessage());
         // CraftBukkit end
+		
+		entityplayer.k_();// SPIGOT-924 // PAIL: rename - playerTick
         
         this.savePlayerFile(entityplayer);
         if (entityplayer.isPassenger()) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index ebdb03b..a154012 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -282,7 +282,6 @@ public class CraftWorld implements World {
         }
         // Paper start - below is not updated for the new unload queue logic.
         return world.getChunkProviderServer().getOrLoadChunkAt(x, z) != null;
-        }
     }
 
     public boolean isChunkLoaded(Chunk chunk) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryDoubleChest.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryDoubleChest.java
index 87252ca..f542c07 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryDoubleChest.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryDoubleChest.java
@@ -59,4 +59,9 @@ public class CraftInventoryDoubleChest extends CraftInventory implements DoubleC
     public DoubleChest getHolder() {
         return new DoubleChest(this);
     }
+	
+	@Override
+    public Location getLocation() {
+        return getLeftSide().getLocation().add(getRightSide().getLocation()).multiply(0.5);
+    }
 }
-- 
2.8.2.windows.1

