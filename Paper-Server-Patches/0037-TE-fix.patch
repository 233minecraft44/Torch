From 56900dee2c498edad49a3e187bea79c4b7e856dc Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Fri, 1 Jul 2016 15:28:00 +0800
Subject: [PATCH] TE fix


diff --git a/src/main/java/net/minecraft/server/BlockChest.java b/src/main/java/net/minecraft/server/BlockChest.java
index a5f2fc0..ef525ea 100644
--- a/src/main/java/net/minecraft/server/BlockChest.java
+++ b/src/main/java/net/minecraft/server/BlockChest.java
@@ -288,7 +288,7 @@ public class BlockChest extends BlockTileEntity {
     }
 
     public void remove(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        TileEntity tileentity = world.getTileEntity(blockposition);
+        TileEntity tileentity = world.getTileEntity(blockposition, true); // Paper - This is being removed, don't fix
 
         if (tileentity instanceof IInventory) {
             InventoryUtils.dropInventory(world, blockposition, (IInventory) tileentity);
diff --git a/src/main/java/net/minecraft/server/BlockDispenser.java b/src/main/java/net/minecraft/server/BlockDispenser.java
index 337a1cb..c6ab276 100644
--- a/src/main/java/net/minecraft/server/BlockDispenser.java
+++ b/src/main/java/net/minecraft/server/BlockDispenser.java
@@ -144,7 +144,7 @@ public class BlockDispenser extends BlockTileEntity {
     }
 
     public void remove(World world, BlockPosition blockposition, IBlockData iblockdata) {
-        TileEntity tileentity = world.getTileEntity(blockposition);
+        TileEntity tileentity = world.getTileEntity(blockposition, true); // Paper - This is being removed, don't fix
 
         if (tileentity instanceof TileEntityDispenser) {
             InventoryUtils.dropInventory(world, blockposition, (TileEntityDispenser) tileentity);
diff --git a/src/main/java/net/minecraft/server/BlockFurnace.java b/src/main/java/net/minecraft/server/BlockFurnace.java
index 25f7b4b..898be91 100644
--- a/src/main/java/net/minecraft/server/BlockFurnace.java
+++ b/src/main/java/net/minecraft/server/BlockFurnace.java
@@ -109,7 +109,7 @@ public class BlockFurnace extends BlockTileEntity {
 
     public void remove(World world, BlockPosition blockposition, IBlockData iblockdata) {
         if (!BlockFurnace.c) {
-            TileEntity tileentity = world.getTileEntity(blockposition);
+            TileEntity tileentity = world.getTileEntity(blockposition, true); // Paper - This is being removed, don't fix
 
             if (tileentity instanceof TileEntityFurnace) {
                 InventoryUtils.dropInventory(world, blockposition, (TileEntityFurnace) tileentity);
diff --git a/src/main/java/net/minecraft/server/BlockSkull.java b/src/main/java/net/minecraft/server/BlockSkull.java
index e411cea..0c69994 100644
--- a/src/main/java/net/minecraft/server/BlockSkull.java
+++ b/src/main/java/net/minecraft/server/BlockSkull.java
@@ -122,7 +122,7 @@ public class BlockSkull extends BlockTileEntity {
             // if (!((Boolean) iblockdata.get(BlockSkull.NODROP)).booleanValue()) {
             if (false) {
                 // CraftBukkit end
-                TileEntity tileentity = world.getTileEntity(blockposition);
+                TileEntity tileentity = world.getTileEntity(blockposition, true); // Paper - This is being removed, don't fix
 
                 if (tileentity instanceof TileEntitySkull) {
                     TileEntitySkull tileentityskull = (TileEntitySkull) tileentity;
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index b57ef8f..c7194b4 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -2054,8 +2054,14 @@ public abstract class World implements IBlockAccess {
     }
 
     public Map<BlockPosition, TileEntity> capturedTileEntities = Maps.newHashMap();
+	// Paper start - Add additional param so we can ignore fixing on removals
     @Nullable
     public TileEntity getTileEntity(BlockPosition blockposition) {
+		return getTileEntity(blockposition, false);
+    }
+
+    public TileEntity getTileEntity(BlockPosition blockposition, boolean isRemoving) {
+        // Paper end
         if (this.E(blockposition)) {
             return null;
         } else {
@@ -2132,7 +2138,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public void s(BlockPosition blockposition) {
-        TileEntity tileentity = this.getTileEntity(blockposition);
+        TileEntity tileentity = this.getTileEntity(blockposition, true); // Paper - This is being removed, don't fix
 
         if (tileentity != null && this.M) {
             tileentity.y();
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index d074705..ab376ca 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -123,8 +123,16 @@ public class WorldServer extends World implements IAsyncTaskHandler {
 
     // CraftBukkit start
     @Override
+	// Paper start - Add additional param so we can ignore fixing on removals
     public TileEntity getTileEntity(BlockPosition pos) {
-        TileEntity result = super.getTileEntity(pos);
+        return getTileEntity(pos, false);
+    }
+
+    @Override
+    public TileEntity getTileEntity(BlockPosition pos, boolean isRemoving) {
+        TileEntity result = super.getTileEntity(pos, isRemoving);
+        if (isRemoving) return result;
+        // Paper end
         Block type = getType(pos).getBlock();
 
         if (type == Blocks.CHEST || type == Blocks.TRAPPED_CHEST) { // Spigot
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
index a9666ff..7b5477d 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBlock.java
@@ -136,11 +136,15 @@ public class CraftBlock implements Block {
         IBlockData blockData = getNMSBlock(type).fromLegacyData(data);
         BlockPosition position = new BlockPosition(x, y, z);
 		
+		// Paper start - Unnecessary, root issue is CB TE's fixer getting too involved. Also potential data issues.
+        /*
 		// SPIGOT-611: need to do this to prevent glitchiness. Easier to handle this here (like /setblock) than to fix weirdness in tile entity cleanup
         // Paper start - If we're setting air, we need to explicitly tell it to send to clients
         int flag = (type == 0) ? 2 : 0;
         chunk.getHandle().getWorld().setTypeAndData(position, Blocks.AIR.getBlockData(), flag);
         // Paper end
+		*/
+        // Paper end
 		
         if (applyPhysics) {
             return chunk.getHandle().getWorld().setTypeAndData(position, blockData, 3);
-- 
2.8.2.windows.1

