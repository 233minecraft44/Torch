From 97126a7b584173c2c58bae60b9cf847a495c3352 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Tue, 12 Jul 2016 17:56:17 +0800
Subject: [PATCH] Async-Saving-of-PersistentCollections


diff --git a/src/main/java/de/minetick/Migot.java b/src/main/java/de/minetick/Migot.java
index e3fe659..bfc5ff5 100644
--- a/src/main/java/de/minetick/Migot.java
+++ b/src/main/java/de/minetick/Migot.java
@@ -20,7 +20,11 @@ import org.bukkit.configuration.InvalidConfigurationException;
 import org.bukkit.craftbukkit.CraftServer;
 
 import de.minetick.command.ReloadSettingsCommand;
-import de.minetick.command.TPSCommand;
+import java.io.FileOutputStream;
+import java.io.OutputStream;
+import java.util.concurrent.ExecutorService;
+import net.minecraft.server.NBTCompressedStreamTools;
+import net.minecraft.server.NBTTagCompound;
 
 public class Migot {
 
@@ -29,6 +33,7 @@ public class Migot {
     private TickTimer tickTimerObject;
     private int timerDelay = 45;
     private ScheduledExecutorService timerService = Executors.newScheduledThreadPool(1, new MigotThreadFactory(Thread.NORM_PRIORITY + 2, "Migot_TimerService"));
+	private ExecutorService nbtFileService = Executors.newSingleThreadExecutor(new MigotThreadFactory(Thread.NORM_PRIORITY - 2, "MinetickMod_NBTFileSaver"));
     private ScheduledFuture<Object> tickTimerTask;
     private static Migot instance;
     private boolean initDone = false;
@@ -62,7 +67,6 @@ public class Migot {
                 throw new IllegalStateException("Migot's config file migot.yml could not be loaded. Check it for syntax errors.");
             }
             CraftServer craftserver = MinecraftServer.getServer().server;
-            craftserver.getCommandMap().register("tps", "Migot", new TPSCommand("tps"));
             craftserver.getCommandMap().register("migot-reload", "Migot", new ReloadSettingsCommand("migot-reload"));
         }
     }
@@ -73,6 +77,14 @@ public class Migot {
 
     public void shutdown() {
         this.timerService.shutdown();
+		this.nbtFileService.shutdown();
+        while(!this.nbtFileService.isTerminated()) {
+            try {
+                if(!this.nbtFileService.awaitTermination(3, TimeUnit.MINUTES)) {
+                    log.warn("Torch is still waiting for NBT Files to be saved.");
+                }
+            } catch(InterruptedException e) {}
+        }
     }
 
     public void checkTickTime(long tickTime) {
@@ -122,4 +134,43 @@ public class Migot {
         }
         return emptyArray;
     }
+	
+	public static void saveNBTFileStatic(NBTTagCompound compound, File file) {
+        instance.saveNBTFile(compound, file);
+    }
+
+    public void saveNBTFile(NBTTagCompound compound, File file) {
+        this.nbtFileService.submit(new NBTFileSaver(compound, file));
+    }
+
+    private class NBTFileSaver implements Callable<Object> {
+
+        private NBTTagCompound compound;
+        private File file;
+
+        public NBTFileSaver(NBTTagCompound compound, File file) {
+            this.compound = compound;
+            this.file = file;
+        }
+
+        public Object call() {
+            FileOutputStream fileoutputstream = null;
+            try {
+                fileoutputstream = new FileOutputStream(this.file);
+                NBTCompressedStreamTools.a(this.compound, (OutputStream) fileoutputstream);
+            } catch (Exception e) {
+                log.error("Error \""+ e.getMessage() +"\" while saving file: " + this.file.getAbsolutePath());
+                e.printStackTrace();
+            } finally {
+                if(fileoutputstream != null) {
+                    try {
+                        fileoutputstream.close();
+                    } catch (IOException e) {}
+                }
+            }
+            this.compound = null;
+            this.file = null;
+            return null;
+        }
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/PersistentCollection.java b/src/main/java/net/minecraft/server/PersistentCollection.java
index e5ab3a6..fc9fde7 100644
--- a/src/main/java/net/minecraft/server/PersistentCollection.java
+++ b/src/main/java/net/minecraft/server/PersistentCollection.java
@@ -96,13 +96,17 @@ public class PersistentCollection {
                 File file = this.b.getDataFile(persistentbase.id);
 
                 if (file != null) {
-                    NBTTagCompound nbttagcompound = new NBTTagCompound();
-
+					NBTTagCompound nbttagcompound = new NBTTagCompound();
                     nbttagcompound.set("data", persistentbase.b(new NBTTagCompound()));
+					// Migot start
+                    /*
                     FileOutputStream fileoutputstream = new FileOutputStream(file);
 
                     NBTCompressedStreamTools.a(nbttagcompound, (OutputStream) fileoutputstream);
                     fileoutputstream.close();
+					*/
+                    de.minetick.Migot.saveNBTFileStatic((NBTTagCompound) (nbttagcompound.clone()), file);
+                    // Migot end
                 }
             } catch (Exception exception) {
                 exception.printStackTrace();
-- 
2.8.2.windows.1

