From acdb7b6d75bf2132fed5ed0a9369b9973efc0c91 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sun, 26 Jun 2016 04:51:53 +0800
Subject: [PATCH] try to fix issue when startup


diff --git a/src/main/java/net/techcable/tacospigot/ArrayMap.java b/src/main/java/net/techcable/tacospigot/ArrayMap.java
index c39bf47..1c83079 100644
--- a/src/main/java/net/techcable/tacospigot/ArrayMap.java
+++ b/src/main/java/net/techcable/tacospigot/ArrayMap.java
@@ -1,5 +1,5 @@
 package net.techcable.tacospigot;
-+
+
 import it.unimi.dsi.fastutil.ints.AbstractInt2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.objects.AbstractObjectCollection;
@@ -19,15 +19,15 @@ import javax.annotation.concurrent.ThreadSafe;
 import static com.google.common.base.Preconditions.*;
 
 /**
-+ * A concurrent map of integers to objects with non-locking read operations, and locking write operations.
-+ * <p>
-+ * This map is backed by a array, and therefore the amount of overhead this map incurs is equal to the largest key/integer.
-+ * Therefore you should <i>not use this map if your keys will be large or scattered!</i>
-+ * However, if the keys are dense and small, this may actually take less memory than a HashMap.
-+ * </p>
-+ *
-+ * @param <V> the type of vales
-+ */
+ * A concurrent map of integers to objects with non-locking read operations, and locking write operations.
+ * <p>
+ * This map is backed by a array, and therefore the amount of overhead this map incurs is equal to the largest key/integer.
+ * Therefore you should <i>not use this map if your keys will be large or scattered!</i>
+ * However, if the keys are dense and small, this may actually take less memory than a HashMap.
+ * </p>
+ *
+ * @param <V> the type of vales
+ */
 @SuppressWarnings("unchecked")
 @ThreadSafe
 public final class ArrayMap<V> extends AbstractInt2ObjectMap<V> {
-- 
2.8.2.windows.1

