From 6cf824e97705d4cd284a9fba2af94e2101c77452 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Wed, 20 Jul 2016 22:21:40 +0800
Subject: [PATCH] Lite optimize foreach for ticking, also add option to
 AutoSave


diff --git a/src/main/java/de/minetick/MigotConfig.java b/src/main/java/de/minetick/MigotConfig.java
index 09ae77c..92a8628 100644
--- a/src/main/java/de/minetick/MigotConfig.java
+++ b/src/main/java/de/minetick/MigotConfig.java
@@ -106,4 +106,8 @@ public class MigotConfig {
     public boolean getOffloadedPathSearchesEnabled() {
         return configuration.getBoolean("async-pathsearches.enabled", false); // It's buggy this point.
     }
+	
+	public boolean getAutoSaveEnabled() {
+        return configuration.getBoolean("auto-save", false);
+    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 24d0a31..0536d13 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -601,7 +601,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             int queuesize = this.autoSaveWorlds.size() / 2;
             this.autoSaveDelay = 0;
             this.autoSaveOrdered = true;
-            this.info("[AutoSave] " + queuesize + " worlds - Starting ...");
+            this.info("AutoSave - " + queuesize + " worlds - Starting ...");
         }
     }
 
@@ -614,7 +614,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                 }
             }
         } else if(this.autoSaveOrdered){
-            this.info("[AutoSave] Done.");
+            this.info("AutoSave - Done");
             this.autoSaveOrdered = false;
         }
     }
@@ -842,7 +842,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             this.q.b().a(agameprofile);
         }
 
-        if (autosavePeriod > 0 && this.ticks % autosavePeriod == 0) { // CraftBukkit
+        if (autosavePeriod > 0 && this.ticks % autosavePeriod == 0 && Migot.getConfig().getAutoSaveEnabled()) { // CraftBukkit // Torch
             // MinecraftTimings.worldSaveTimer.startTiming(); // Spigot
             this.methodProfiler.a("save");
             this.v.savePlayers();
@@ -854,7 +854,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
 		// Migot start
         if(this.autoSaveOrdered) {
             this.autoSaveNextWorld();
-         }
+        }
 		 
 		long tickTime = System.nanoTime() - i;
         this.migot.checkTickTime(tickTime);
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index e609972..19c4843 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -2511,19 +2511,13 @@ public abstract class World implements IBlockAccess {
                 this.o = MathHelper.a(this.o, 0.0F, 1.0F);
 
                 // CraftBukkit start
-				Iterator it = this.players.iterator();
-                while (it.hasNext()) {
-                    if (((EntityPlayer) it.next()).world == this) {
-                        ((EntityPlayer) it.next()).tickWeather();
+				// Torch start - Lite optimization
+                for (EntityHuman entity : this.players) {
+                    if (((EntityPlayer)entity).world == this) {
+                        ((EntityPlayer)entity).tickWeather();
                     }
                 }
-				/*
-                for (int idx = 0; idx < this.players.size(); ++idx) {
-                    if (((EntityPlayer) this.players.get(idx)).world == this) {
-                        ((EntityPlayer) this.players.get(idx)).tickWeather();
-                    }
-                }
-				*/
+				// Torch end
                 // CraftBukkit end
             }
         }
diff --git a/src/main/resources/configurations/migot.yml b/src/main/resources/configurations/migot.yml
index fa965b9..bac9261 100644
--- a/src/main/resources/configurations/migot.yml
+++ b/src/main/resources/configurations/migot.yml
@@ -1,4 +1,5 @@
 general-settings:
+auto-save: false
 async-pathsearches:
     enabled: false
     threadPoolSize: 1
-- 
2.8.2.windows.1

