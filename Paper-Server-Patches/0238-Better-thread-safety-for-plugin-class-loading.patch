From 37b54d82e7d7105f5a4620afdadcfef1b1ea3759 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sun, 28 Aug 2016 09:32:37 +0800
Subject: [PATCH] Better thread safety for plugin class loading


diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index db813aa..1f229a9 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -13,6 +13,7 @@ import java.util.Map;
 import java.util.Set;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
+import java.util.Collections;
 import java.util.logging.Level;
 import java.util.regex.Pattern;
 
@@ -46,7 +47,7 @@ public final class JavaPluginLoader implements PluginLoader {
 	final Server server;
 	private final Pattern[] fileFilters = new Pattern[] { Pattern.compile("\\.jar$"), };
 	private final Map<String, Class<?>> classes = new java.util.concurrent.ConcurrentHashMap<String, Class<?>>(); // Spigot
-	private final Map<String, PluginClassLoader> loaders = new LinkedHashMap<String, PluginClassLoader>();
+	private final Map<String, PluginClassLoader> loaders = Collections.synchronizedMap(new LinkedHashMap<String, PluginClassLoader>());
 
 	/**
 	 * This class was not meant to be constructed explicitly
@@ -103,9 +104,6 @@ public final class JavaPluginLoader implements PluginLoader {
 		}
 
 		for (final String pluginName : description.getDepend()) {
-			if (loaders == null) {
-				throw new UnknownDependencyException(pluginName);
-			}
 			PluginClassLoader current = loaders.get(pluginName);
 
 			if (current == null) {
@@ -177,17 +175,16 @@ public final class JavaPluginLoader implements PluginLoader {
 		if (cachedClass != null) {
 			return cachedClass;
 		} else {
-			for (String current : loaders.keySet()) {
-				PluginClassLoader loader = loaders.get(current);
-
-				try {
-					cachedClass = loader.findClass(name, false);
-				} catch (ClassNotFoundException cnfe) {
-				}
-				if (cachedClass != null) {
-					return cachedClass;
-				}
-			}
+			synchronized (loaders) {
+                for (PluginClassLoader loader : loaders.values()) {
+                    try {
+                        cachedClass = loader.findClass(name, false);
+                    } catch (ClassNotFoundException cnfe) {}
+                    if (cachedClass != null) {
+                        return cachedClass;
+                    }
+                }
+            }
 		}
 		return null;
 	}
-- 
2.8.2.windows.1

