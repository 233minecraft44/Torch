From f845cd0de5a21cbcc14effd42cec2fec5106834e Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Tue, 12 Jul 2016 04:23:06 +0800
Subject: [PATCH] Fix-Chunk-Coordinates-Miscalculations


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 9c68cc1..384abf5 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -2129,7 +2129,7 @@ public abstract class Entity implements ICommandListener {
             // =============================================================
             CraftEntity craft = (CraftEntity) entity.getBukkitEntity().getVehicle();
             Entity orig = craft == null ? null : craft.getHandle();
-            if (getBukkitEntity() instanceof Vehicle && entity.getBukkitEntity() instanceof LivingEntity && entity.world.isChunkLoaded((int) entity.locX >> 4, (int) entity.locZ >> 4, false)) { // Boolean not used
+            if (getBukkitEntity() instanceof Vehicle && entity.getBukkitEntity() instanceof LivingEntity && entity.world.isChunkLoaded(MathHelper.floor(entity.locX) >> 4, MathHelper.floor(entity.locZ) >> 4, true)) { // Boolean not used
                 VehicleEnterEvent event = new VehicleEnterEvent(
                         (Vehicle) getBukkitEntity(),
                          entity.getBukkitEntity()
diff --git a/src/main/java/net/minecraft/server/EntityExperienceOrb.java b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
index bca9ce1..695e315 100644
--- a/src/main/java/net/minecraft/server/EntityExperienceOrb.java
+++ b/src/main/java/net/minecraft/server/EntityExperienceOrb.java
@@ -59,9 +59,25 @@ public class EntityExperienceOrb extends Entity {
         this.j(this.locX, (this.getBoundingBox().b + this.getBoundingBox().e) / 2.0D, this.locZ);
         double d0 = 8.0D;
 
+		EntityHuman foundTarget = null;
         if (this.targetTime < this.a - 20 + this.getId() % 100) {
             if (this.targetPlayer == null || this.targetPlayer.h(this) > d0 * d0) {
-                this.targetPlayer = this.world.findNearbyPlayer(this, d0);
+                foundTarget = this.world.findNearbyPlayer(this, d0);
+                if(foundTarget == null) {
+                    this.targetPlayer = foundTarget;
+                } else if(foundTarget != null && !foundTarget.equals(this.targetPlayer)) {
+                    // CraftBukkit start
+                    EntityTargetEvent event = CraftEventFactory.callEntityTargetEvent(this, foundTarget, EntityTargetEvent.TargetReason.CLOSEST_PLAYER);
+                    Entity target = event.getTarget() == null ? null : ((org.bukkit.craftbukkit.entity.CraftEntity) event.getTarget()).getHandle();
+                    if(!event.isCancelled()) {
+                        if(target == null) {
+                            this.targetPlayer = null;
+                        } else if(target instanceof EntityHuman) {
+                            this.targetPlayer = (EntityHuman) target;
+                        }
+                    }
+                    // CraftBukkit end
+                }
             }
 
             this.targetTime = this.a;
@@ -72,16 +88,6 @@ public class EntityExperienceOrb extends Entity {
         }
 
         if (this.targetPlayer != null) {
-            // CraftBukkit start
-            boolean cancelled = false;
-            if (this.targetPlayer != prevTarget) {
-                EntityTargetLivingEntityEvent event = CraftEventFactory.callEntityTargetLivingEvent(this, targetPlayer, EntityTargetEvent.TargetReason.CLOSEST_PLAYER);
-                EntityLiving target = event.getTarget() == null ? null : ((org.bukkit.craftbukkit.entity.CraftLivingEntity) event.getTarget()).getHandle();
-                targetPlayer = target instanceof EntityHuman ? (EntityHuman) target : null;
-                cancelled = event.isCancelled();
-            }
-
-            if (!cancelled && targetPlayer != null) {
             double d1 = (this.targetPlayer.locX - this.locX) / d0;
             double d2 = (this.targetPlayer.locY + (double) this.targetPlayer.getHeadHeight() / 2.0D - this.locY) / d0;
             double d3 = (this.targetPlayer.locZ - this.locZ) / d0;
@@ -94,8 +100,6 @@ public class EntityExperienceOrb extends Entity {
                 this.motY += d2 / d4 * d5 * 0.1D;
                 this.motZ += d3 / d4 * d5 * 0.1D;
             }
-            }
-            // CraftBukkit end
         }
 
         this.move(this.motX, this.motY, this.motZ);
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index bb08a39..017e994 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -307,7 +307,7 @@ public abstract class PlayerList {
         }
 
         worldserver1.getPlayerChunkMap().addPlayer(entityplayer);
-        worldserver1.getChunkProviderServer().getChunkAt((int) entityplayer.locX >> 4, (int) entityplayer.locZ >> 4);
+        worldserver1.getChunkProviderServer().getChunkAt(MathHelper.floor(entityplayer.locX) >> 4, MathHelper.floor(entityplayer.locZ) >> 4); // Migot - fix rounding error
     }
 
     public int d() {
@@ -660,7 +660,7 @@ public abstract class PlayerList {
         entityplayer1.setLocation(location.getX(), location.getY(), location.getZ(), location.getYaw(), location.getPitch());
         // CraftBukkit end
 
-        worldserver.getChunkProviderServer().getChunkAt((int) entityplayer1.locX >> 4, (int) entityplayer1.locZ >> 4);
+        worldserver.getChunkProviderServer().getChunkAt(MathHelper.floor(entityplayer1.locX) >> 4, MathHelper.floor(entityplayer1.locZ) >> 4); // Migot - fix rounding error
 
         while (avoidSuffocation && !worldserver.getCubes(entityplayer1, entityplayer1.getBoundingBox()).isEmpty() && entityplayer1.locY < 256.0D) {
             entityplayer1.setPosition(entityplayer1.locX, entityplayer1.locY + 1.0D, entityplayer1.locZ);
-- 
2.8.2.windows.1

