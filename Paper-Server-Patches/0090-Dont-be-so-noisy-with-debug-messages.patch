From be43522815f865faf995502640d8b43f0c9d7140 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Mon, 11 Jul 2016 22:58:02 +0800
Subject: [PATCH] Dont be so noisy with debug messages


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 5017d98..125bf99 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -179,6 +179,7 @@ public class PaperConfig {
         Timings.setHistoryInterval(timingHistoryInterval * 20);
         Timings.setHistoryLength(timingHistoryLength * 20);
 
+		if (org.bukkit.Bukkit.getServer().isDebugLoggingEnabled()) // don't be so noisy
         Bukkit.getLogger().log(Level.INFO, "Spigot Timings: " + timings +
                 " - Verbose: " + verboseTimings +
                 " - Interval: " + timeSummary(Timings.getHistoryInterval() / 20) +
diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 09249c8..255e994 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -26,15 +26,19 @@ public class PaperWorldConfig {
     public void init() {
         this.verbose = getBoolean("verbose", false);
 
-        log("-------- World Settings For [" + worldName + "] --------");
+        log("-------- World Settings For [" + worldName + "] --------", false);
         PaperConfig.readConfig(PaperWorldConfig.class, this);
     }
 
-    private void log(String s) {
+    private void log(String s, boolean indent) {
         if (verbose) {
-            Bukkit.getLogger().info(s);
+            Bukkit.getLogger().info((indent ? "    " : "") + s);
         }
     }
+	
+	private void log(String s) {
+        this.log(s, true);
+    }
 
     private void set(String path, Object val) {
         config.set("world-settings.default." + path, val);
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 70994d4..6d44682 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -574,7 +574,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
     }
 
     protected boolean aO() {
-        server.getLogger().info( "**** Beginning UUID conversion, this may take A LONG time ****"); // Spigot, let the user know whats up!
+        // server.getLogger().info( "**** Beginning UUID conversion, this may take A LONG time ****"); // Spigot, let the user know whats up!
         boolean flag = false;
 
         int i;
diff --git a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
index 1d0890d..ede5112 100644
--- a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
+++ b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
@@ -86,6 +86,7 @@ public class NameReferencingFileConverter {
         final GameProfileBanList gameprofilebanlist = new GameProfileBanList(PlayerList.a);
 
         if (NameReferencingFileConverter.b.exists() && NameReferencingFileConverter.b.isFile()) {
+			uniqueIdConversionStarting(); // Paper - notify that the unique id conversion is starting
             if (gameprofilebanlist.c().exists()) {
                 try {
                     gameprofilebanlist.load();
@@ -145,6 +146,7 @@ public class NameReferencingFileConverter {
         IpBanList ipbanlist = new IpBanList(PlayerList.b);
 
         if (NameReferencingFileConverter.a.exists() && NameReferencingFileConverter.a.isFile()) {
+			uniqueIdConversionStarting(); // Paper - notify that the unique id conversion is starting
             if (ipbanlist.c().exists()) {
                 try {
                     ipbanlist.load();
@@ -187,6 +189,7 @@ public class NameReferencingFileConverter {
         final OpList oplist = new OpList(PlayerList.c);
 
         if (NameReferencingFileConverter.c.exists() && NameReferencingFileConverter.c.isFile()) {
+			uniqueIdConversionStarting(); // Paper - notify that the unique id conversion is starting
             if (oplist.c().exists()) {
                 try {
                     oplist.load();
@@ -232,6 +235,7 @@ public class NameReferencingFileConverter {
         final WhiteList whitelist = new WhiteList(PlayerList.d);
 
         if (NameReferencingFileConverter.d.exists() && NameReferencingFileConverter.d.isFile()) {
+			uniqueIdConversionStarting(); // Paper - notify that the unique id conversion is starting
             if (whitelist.c().exists()) {
                 try {
                     whitelist.load();
@@ -308,6 +312,7 @@ public class NameReferencingFileConverter {
         final File file2 = new File(file.getParentFile(), "unknownplayers");
 
         if (file.exists() && file.isDirectory()) {
+			uniqueIdConversionStarting(); // Paper - notify that the unique id conversion is starting
             File[] afile = file.listFiles();
             ArrayList arraylist = Lists.newArrayList();
             File[] afile1 = afile;
@@ -539,4 +544,14 @@ public class NameReferencingFileConverter {
             this(s, throwable);
         }
     }
+	
+	// Paper start
+    private static boolean uniqueIdConversionStarted = false;
+    public static void uniqueIdConversionStarting() {
+        if (!uniqueIdConversionStarted) {
+            org.bukkit.Bukkit.getLogger().info("**** Beginning UUID conversion, this may take A LONG time ****"); // Spigot, let the user know whats up!
+            uniqueIdConversionStarted = true;
+        }
+    }
+    // Paper end
 }
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 4e5083b..f1eb254 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1039,4 +1039,6 @@ public interface Server extends PluginMessageRecipient {
      * @return The entity that is identified by the given UUID, or null if one isn't found
      */
     Entity getEntity(UUID uuid); // Paper
+	
+	boolean isDebugLoggingEnabled(); // Paper
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index c0c884c..263f4c0 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1915,5 +1915,10 @@ public final class CraftServer implements Server {
         }
         return entity.getBukkitEntity();
     }
+	
+	@Override
+    public boolean isDebugLoggingEnabled() {
+        return ((DedicatedServer) this.console).propertyManager.getBoolean("debug", false);
+    }
     // Paper end
 }
diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
index 99b5cc4e..9c7c5d7 100644
--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
@@ -38,6 +38,7 @@ public final class PluginClassLoader extends URLClassLoader { // Spigot
                 method.setAccessible( true );
                 method.invoke( null );
                 method.setAccessible( oldAccessible );
+				if (org.bukkit.Bukkit.getServer().isDebugLoggingEnabled()) // Paper - don't be so noisy
                 org.bukkit.Bukkit.getLogger().log( java.util.logging.Level.INFO, "Set PluginClassLoader as parallel capable" );
             }
         } catch ( NoSuchMethodException ex )
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index d942a0c..f0a8380 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -236,6 +236,7 @@ public class SpigotConfig
     {
         int count = getInt( "settings.netty-threads", 4 );
         System.setProperty( "io.netty.eventLoopThreads", Integer.toString( count ) );
+		if (org.bukkit.Bukkit.getServer().isDebugLoggingEnabled()) // Paper - don't be so noisy
         Bukkit.getLogger().log( Level.INFO, "Using {0} threads for Netty based IO", count );
     }
 
@@ -280,6 +281,7 @@ public class SpigotConfig
     private static void playerSample()
     {
         playerSample = getInt( "settings.sample-count", 12 );
+		if (org.bukkit.Bukkit.getServer().isDebugLoggingEnabled()) // Paper - don't be so noisy
         System.out.println( "Server Ping Player Sample Count: " + playerSample );
     }
 
@@ -379,6 +381,7 @@ public class SpigotConfig
             ctx.updateLoggers( conf );
         }
 
+		if (org.bukkit.Bukkit.getServer().isDebugLoggingEnabled()) // Paper
         if ( LogManager.getRootLogger().isTraceEnabled() )
         {
             Bukkit.getLogger().info( "Debug logging is enabled" );
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index db8ce1b..d0651fe 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -124,16 +124,28 @@ public class SpigotWorldConfig
     {
         this.verbose = getBoolean( "verbose", true );
 
-        log( "-------- World Settings For [" + worldName + "] --------" );
+        log( "-------- World Settings For [" + worldName + "] --------", false ); // Paper - pass false as second arg
         SpigotConfig.readConfig( SpigotWorldConfig.class, this );
     }
+	
+	// Paper start
+    private void log(String s, boolean indent) {
+        if (verbose) {
+            Bukkit.getLogger().info((indent ? "    " : "") + s);
+        }
+    }
+    // Paper end
 
     private void log(String s)
     {
-        if ( verbose )
+         // Paper start
+        /*
+		if ( verbose )
         {
             Bukkit.getLogger().info( s );
         }
+		}*/
+        this.log(s, true);
     }
 
     private void set(String path, Object val)
-- 
2.8.2.windows.1

