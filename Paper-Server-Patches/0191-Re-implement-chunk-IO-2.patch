From 4966d61931d6a7c43ee82cc231b89106cab253d6 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Tue, 12 Jul 2016 16:57:09 +0800
Subject: [PATCH] Re-implement chunk IO 2


diff --git a/src/main/java/net/minecraft/server/IPlayerFileData.java b/src/main/java/net/minecraft/server/IPlayerFileData.java
index 80ed342..62c1062 100644
--- a/src/main/java/net/minecraft/server/IPlayerFileData.java
+++ b/src/main/java/net/minecraft/server/IPlayerFileData.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import java.util.List; // Paper
+import java.util.UUID; // Paper
 
 public interface IPlayerFileData {
 
@@ -8,4 +10,10 @@ public interface IPlayerFileData {
     NBTTagCompound load(EntityHuman entityhuman);
 
     String[] getSeenPlayers();
+	
+	List<UUID> getSeenPlayerUUIDs(); // Paper
+
+    NBTTagCompound getPlayerData(UUID id); // Paper
+
+    long getLastModified(UUID id); // Paper
 }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index a34c290..80dcf9f 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -20,6 +20,7 @@ import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.bukkit.craftbukkit.Main;
+import org.bukkit.craftbukkit.chunkio2.impl.CraftNBTStorage;
 
 // Migot start
 import de.minetick.AutoSaveJob;
@@ -273,7 +274,11 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             worldsettings.setGeneratorSettings(s2);
 
             if (j == 0) {
-				IDataManager idatamanager = new ServerNBTManager(server.getWorldContainer(), s1, true, this.dataConverterManager);
+				// Paper - Start
+                IDataManager idatamanager = persistence == null ? 
+                        new ServerNBTManager(server.getWorldContainer(), s1, true, this.dataConverterManager) :
+                        new CraftNBTStorage(true, this.dataConverterManager, persistence);
+                // Paper - End
                 WorldData worlddata = idatamanager.getWorldData();
                 if (worlddata == null) {
                     worlddata = new WorldData(worldsettings, s1);
@@ -323,7 +328,11 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                     }
                 }
 
-                IDataManager idatamanager = new ServerNBTManager(server.getWorldContainer(), name, true, this.dataConverterManager);
+                // Paper - Start
+                IDataManager idatamanager = persistence == null ? 
+                        new ServerNBTManager(server.getWorldContainer(), name, true, this.dataConverterManager) :
+                        new CraftNBTStorage(true, this.dataConverterManager, persistence);
+                // Paper - End
                 // world =, b0 to dimension, s1 to name, added Environment and gen
                 WorldData worlddata = idatamanager.getWorldData();
                 if (worlddata == null) {
diff --git a/src/main/java/net/minecraft/server/WorldNBTStorage.java b/src/main/java/net/minecraft/server/WorldNBTStorage.java
index 6bb3d3f..fc912e8 100644
--- a/src/main/java/net/minecraft/server/WorldNBTStorage.java
+++ b/src/main/java/net/minecraft/server/WorldNBTStorage.java
@@ -214,7 +214,7 @@ public class WorldNBTStorage implements IDataManager, IPlayerFileData {
     }
 
     // CraftBukkit start
-    public NBTTagCompound getPlayerData(String s) {
+    public NBTTagCompound getPlayerData(UUID s) { // Paper - String -> UUID.
         try {
             File file1 = new File(this.playerDir, s + ".dat");
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index 40697e9..1feaa49 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -13,6 +13,7 @@ import com.destroystokyo.paper.profile.AccountProfile;
 import org.bukkit.BanList;
 import org.bukkit.Bukkit;
 import org.bukkit.Location;
+import net.minecraft.server.IPlayerFileData; // Paper
 import org.bukkit.OfflinePlayer;
 import org.bukkit.Server;
 import net.minecraft.server.WorldNBTStorage;
@@ -28,12 +29,12 @@ import org.bukkit.plugin.Plugin;
 public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializable {
     private final GameProfile profile;
     private final CraftServer server;
-    private final WorldNBTStorage storage;
+    private final IPlayerFileData storage; // Paper
 
     protected CraftOfflinePlayer(CraftServer server, GameProfile profile) {
         this.server = server;
         this.profile = profile;
-        this.storage = (WorldNBTStorage) (server.console.worlds.get(0).getDataManager());
+        this.storage = server.console.worlds.get(0).getDataManager().getPlayerFileData(); // Paper
 		// Paper start - store our profile
     }
 
@@ -169,13 +170,9 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
         hash = 97 * hash + (this.getUniqueId() != null ? this.getUniqueId().hashCode() : 0);
         return hash;
     }
-	
-	private File getDataFile() {
-        return new File(storage.getPlayerDir(), getUniqueId() + ".dat");
-    }
 
     private NBTTagCompound getData() {
-        return storage.getPlayerData(getUniqueId().toString());
+        return storage.getPlayerData(getUniqueId()); // Paper
     }
 
     private NBTTagCompound getBukkitData() {
@@ -201,8 +198,7 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
             if (data.hasKey("firstPlayed")) {
                 return data.getLong("firstPlayed");
             } else {
-                File file = getDataFile();
-                return file.lastModified();
+                return storage.getLastModified(getUniqueId()); // Paper
             }
         } else {
             return 0;
@@ -219,8 +215,7 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
             if (data.hasKey("lastPlayed")) {
                 return data.getLong("lastPlayed");
             } else {
-                File file = getDataFile();
-                return file.lastModified();
+                return storage.getLastModified(getUniqueId()); // Paper
             }
         } else {
             return 0;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 17076ca..860b410 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -23,6 +23,7 @@ import java.util.regex.Pattern;
 import com.destroystokyo.paper.PaperConfig;
 import java.util.stream.Collectors; // Paper
 import org.bukkit.craftbukkit.chunkio2.WorldPersistence;
+import org.bukkit.craftbukkit.chunkio2.impl.CraftNBTStorage;
 import org.bukkit.craftbukkit.chunkio2.anvil.AnvilWorldPersistenceFactory;
 
 import javax.imageio.ImageIO;
@@ -921,7 +922,13 @@ public final class CraftServer implements Server {
         } while(used);
         boolean hardcore = false;
 
-        IDataManager sdm = new ServerNBTManager(getWorldContainer(), name, true, getHandle().getServer().getDataConverterManager());
+        // Paper Start
+        org.bukkit.craftbukkit.chunkio2.WorldPersistence persistence = getPersistence(name, creator.environment(), false);
+
+        IDataManager sdm = persistence == null ? 
+                new ServerNBTManager(getWorldContainer(), name, true, getHandle().getServer().getDataConverterManager()) :
+                new CraftNBTStorage(false, getHandle().getServer().getDataConverterManager(), persistence);
+        // Paper End
         WorldData worlddata = sdm.getWorldData();
         WorldSettings worldSettings = null;
         if (worlddata == null) {
@@ -1544,21 +1551,13 @@ public final class CraftServer implements Server {
 
     @Override
     public OfflinePlayer[] getOfflinePlayers() {
-        WorldNBTStorage storage = (WorldNBTStorage) console.worlds.get(0).getDataManager();
-        String[] files = storage.getPlayerDir().list(new DatFileFilter());
-        Set<OfflinePlayer> players = new HashSet<OfflinePlayer>();
-
-        for (String file : files) {
-            try {
-                players.add(getOfflinePlayer(UUID.fromString(file.substring(0, file.length() - 4))));
-            } catch (IllegalArgumentException ex) {
-                // Who knows what is in this directory, just ignore invalid files
-            }
-        }
-
-        players.addAll(getOnlinePlayers());
-
-        return players.toArray(new OfflinePlayer[players.size()]);
+        // Paper Start
+        Set<OfflinePlayer> result = 
+                console.worlds.get(0).getDataManager().getPlayerFileData().getSeenPlayerUUIDs().stream()
+                .map((id) -> getOfflinePlayer(id))
+                .collect(Collectors.toSet());
+        return result.toArray(new OfflinePlayer[result.size()]);
+        // Paper End
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index d65ddab..c329f2c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -1233,7 +1233,7 @@ public class CraftWorld implements World {
     }
 
     public File getWorldFolder() {
-        return ((WorldNBTStorage) world.getDataManager()).getDirectory();
+        return world.getDataManager().getDirectory(); // Paper
     }
 
     public void sendPluginMessage(Plugin source, String channel, byte[] message) {
-- 
2.8.2.windows.1

