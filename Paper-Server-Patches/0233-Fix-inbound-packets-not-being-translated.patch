From 5b9a9ed02d3f286553613df94741651133d0f01a Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Sat, 16 Jul 2016 06:52:01 +0800
Subject: [PATCH] Fix inbound packets not being translated


diff --git a/src/main/java/net/minecraft/server/PacketDecoder.java b/src/main/java/net/minecraft/server/PacketDecoder.java
new file mode 100644
index 0000000..fdf00d5
--- /dev/null
+++ b/src/main/java/net/minecraft/server/PacketDecoder.java
@@ -0,0 +1,60 @@
+package net.minecraft.server;
+
+import io.netty.buffer.ByteBuf;
+import io.netty.channel.ChannelHandlerContext;
+import io.netty.handler.codec.ByteToMessageDecoder;
+import java.io.IOException;
+import java.util.List;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.apache.logging.log4j.Marker;
+import org.apache.logging.log4j.MarkerManager;
+import org.bukkit.craftbukkit.protocol.ProtocolTranslator; // SportBukkit
+
+public class PacketDecoder extends ByteToMessageDecoder {
+
+    private static final Logger a = LogManager.getLogger();
+    private static final Marker b = MarkerManager.getMarker("PACKET_RECEIVED", NetworkManager.b);
+    private final EnumProtocolDirection c;
+
+    public PacketDecoder(EnumProtocolDirection enumprotocoldirection) {
+        this.c = enumprotocoldirection;
+    }
+
+    protected void decode(ChannelHandlerContext channelhandlercontext, ByteBuf bytebuf, List<Object> list) throws Exception {
+        if (bytebuf.readableBytes() != 0) {
+            PacketDataSerializer packetdataserializer = new PacketDataSerializer(bytebuf);
+			
+			// SportBukkit start - set protocol version
+            final NetworkManager networkManager = channelhandlercontext.pipeline().get(NetworkManager.class);
+            if(networkManager != null) {
+                packetdataserializer.protocolVersion = networkManager.protocolVersion;
+            }
+            // SportBukkit end
+			
+            int i = packetdataserializer.g();
+			
+			// SportBukkit start - translate packet ID
+            i = ProtocolTranslator.packetId(true, packetdataserializer.protocolVersion, i);
+            if(i < 0) return;
+            // SportBukkit end
+			
+            Packet packet = ((EnumProtocol) channelhandlercontext.channel().attr(NetworkManager.c).get()).a(this.c, i);
+
+            if (packet == null) {
+                throw new IOException("Bad packet id " + i);
+            } else {
+                packet.a(packetdataserializer);
+                if (packetdataserializer.readableBytes() > 0) {
+                    throw new IOException("Packet " + ((EnumProtocol) channelhandlercontext.channel().attr(NetworkManager.c).get()).a() + "/" + i + " (" + packet.getClass().getSimpleName() + ") was larger than I expected, found " + packetdataserializer.readableBytes() + " bytes extra whilst reading packet " + i);
+                } else {
+                    list.add(packet);
+                    if (PacketDecoder.a.isDebugEnabled()) {
+                        PacketDecoder.a.debug(PacketDecoder.b, " IN: [{}:{}] {}", new Object[] { channelhandlercontext.channel().attr(NetworkManager.c).get(), Integer.valueOf(i), packet.getClass().getName()});
+                    }
+
+                }
+            }
+        }
+    }
+}
-- 
2.8.2.windows.1

