From fcb67ea5c410cc53f80157615d370de4c401f66e Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Fri, 1 Jul 2016 14:51:09 +0800
Subject: [PATCH] SPIGOT-1942 Temporarily fix


diff --git a/src/main/java/net/minecraft/server/MerchantRecipe.java b/src/main/java/net/minecraft/server/MerchantRecipe.java
index e3a8b1d..4c373b2 100644
--- a/src/main/java/net/minecraft/server/MerchantRecipe.java
+++ b/src/main/java/net/minecraft/server/MerchantRecipe.java
@@ -3,7 +3,12 @@ package net.minecraft.server;
 import javax.annotation.Nullable;
 import org.bukkit.craftbukkit.inventory.CraftMerchantRecipe; // CraftBukkit
 
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
 public class MerchantRecipe {
+	
+	private static final Logger logger = LogManager.getLogger();
 
     public ItemStack buyingItem1;
     public ItemStack buyingItem2;
@@ -120,6 +125,20 @@ public class MerchantRecipe {
 
     public NBTTagCompound k() {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
+		
+		if (this.buyingItem1 == null || this.sellingItem == null) {
+            MerchantRecipe.logger.warn("save recipe failed.");
+
+            ItemStack buy = new ItemStack(Items.EMERALD, 9);
+            ItemStack sell = new ItemStack(Blocks.EMERALD_BLOCK);
+
+            nbttagcompound.set("buy", buy.save(new NBTTagCompound()));
+            nbttagcompound.set("sell", sell.save(new NBTTagCompound()));
+            nbttagcompound.setInt("uses", 1);
+            nbttagcompound.setInt("maxUses", 1);
+            nbttagcompound.setBoolean("rewardExp", false);
+            return nbttagcompound;
+        }
 
         nbttagcompound.set("buy", this.buyingItem1.save(new NBTTagCompound()));
         nbttagcompound.set("sell", this.sellingItem.save(new NBTTagCompound()));
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 43242a8..16197af 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -169,7 +169,7 @@ public class SpigotWorldConfig
     private void hoppers()
     {
         // Set the tick delay between hopper item movements
-        hopperTransfer = getInt( "ticks-per.hopper-transfer", 8 );
+        hopperTransfer = getInt( "ticks-per.hopper-transfer", 4 ); // Torch - reset normally
         // Set the tick delay between checking for items after the associated
         // container is empty. Default to the hopperTransfer value to prevent
         // hopper sorting machines from becoming out of sync.
-- 
2.8.2.windows.1

