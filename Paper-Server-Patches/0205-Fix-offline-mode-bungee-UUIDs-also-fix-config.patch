From feae44308a7c89281ab02637e7878cde4e97e2fd Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Fri, 5 Aug 2016 13:31:51 +0800
Subject: [PATCH] Fix offline-mode bungee UUIDs, also fix config


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index bd48a55..3193628 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -268,4 +268,9 @@ public class PaperConfig {
     private static void disableFastRegeneration() {
         disableFastRegeneration = getBoolean("settings.disable-fast-regeneration", false);
     }
+	
+	public static boolean bungeeOnlineMode = false;
+   private static void bungeeOnlineMode() {
+        bungeeOnlineMode = getBoolean("settings.bungee-online-mode", false);
+    }
 }
diff --git a/src/main/java/de/minetick/MigotConfig.java b/src/main/java/de/minetick/MigotConfig.java
index 697e381..7357d97 100644
--- a/src/main/java/de/minetick/MigotConfig.java
+++ b/src/main/java/de/minetick/MigotConfig.java
@@ -42,9 +42,10 @@ public class MigotConfig {
         return configs;
     }
 
+	// Settings - load
     private void loadConfigContent() {
-		AutoSaveEnabled = configuration.getBoolean("auto-save", false);
-		ForkPingEnabled = configuration.getBoolean("settings.fork-ping", false);
+		enabledAutoSave = configuration.getBoolean("auto-save", false);
+		enabledForkPing = configuration.getBoolean("settings.fork-ping", false);
     }
 
     private FileConfiguration loadConfig(File file) throws IOException, InvalidConfigurationException {
@@ -65,13 +66,8 @@ public class MigotConfig {
         return config;
     }
 	
-	boolean AutoSaveEnabled = false;
-	public boolean getAutoSaveEnabled() {
-        return AutoSaveEnabled;
-    }
+	// Settings - values
+	public static boolean enabledAutoSave = false;
+	public static boolean enabledForkPing = false;
 	
-	boolean ForkPingEnabled = false;
-	public boolean getForkPingEnabled() {
-        return ForkPingEnabled;
-    }
 }
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 8259096..dcfd876 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -818,7 +818,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             this.q.b().a(agameprofile);
         }
 
-        if (autosavePeriod > 0 && this.ticks % autosavePeriod == 0 && Migot.getConfig().getAutoSaveEnabled()) { // CraftBukkit // Torch
+        if (autosavePeriod > 0 && this.ticks % autosavePeriod == 0 && de.minetick.MigotConfig.enabledAutoSave) { // CraftBukkit // Torch
             MinecraftTimings.worldSaveTimer.startTiming(); // Spigot
             this.methodProfiler.a("save");
             this.v.savePlayers();
diff --git a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
index e015242..3b711bd 100644
--- a/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
+++ b/src/main/java/net/minecraft/server/NameReferencingFileConverter.java
@@ -65,7 +65,8 @@ public class NameReferencingFileConverter {
             }
         }), String.class);
 
-        if (minecraftserver.getOnlineMode() || org.spigotmc.SpigotConfig.bungee) { // Spigot: bungee = online mode, for now.
+        if (minecraftserver.getOnlineMode()
+                || (org.spigotmc.SpigotConfig.bungee && com.destroystokyo.paper.PaperConfig.bungeeOnlineMode)) { // Spigot: bungee = online mode, for now.  // Paper - fix offline UUIDs
             minecraftserver.getGameProfileRepository().findProfilesByNames(astring, Agent.MINECRAFT, profilelookupcallback);
         } else {
             String[] astring1 = astring;
diff --git a/src/main/java/net/minecraft/server/PacketStatusInPing.java b/src/main/java/net/minecraft/server/PacketStatusInPing.java
index d4cc5a9..5c7cfd0 100644
--- a/src/main/java/net/minecraft/server/PacketStatusInPing.java
+++ b/src/main/java/net/minecraft/server/PacketStatusInPing.java
@@ -2,7 +2,6 @@ package net.minecraft.server;
 
 import java.io.IOException;
 import java.util.concurrent.RecursiveAction;
-import de.minetick.Migot;
 
 public class PacketStatusInPing implements Packet<PacketStatusInListener> {
 
@@ -33,7 +32,7 @@ public class PacketStatusInPing implements Packet<PacketStatusInListener> {
     }
 
     public void a(PacketStatusInListener packetstatusinlistener) {
-		if (Migot.getConfig().getForkPingEnabled()) {
+		if (de.minetick.MigotConfig.enabledForkPing) {
 			InTask a_task = new InTask(packetstatusinlistener);
 			a_task.fork();
 		} else { packetstatusinlistener.a(this); }
diff --git a/src/main/java/net/minecraft/server/PacketStatusInStart.java b/src/main/java/net/minecraft/server/PacketStatusInStart.java
index 76753cf..6831280 100644
--- a/src/main/java/net/minecraft/server/PacketStatusInStart.java
+++ b/src/main/java/net/minecraft/server/PacketStatusInStart.java
@@ -27,7 +27,7 @@ public class PacketStatusInStart implements Packet<PacketStatusInListener> {
     }
 	
     public void a(PacketStatusInListener packetstatusinlistener) {
-		if (Migot.getConfig().getForkPingEnabled()) {
+		if (de.minetick.MigotConfig.enabledForkPing) {
 			InTask a_task = new InTask(packetstatusinlistener);
 			a_task.fork();
 		} else { packetstatusinlistener.a(this); }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 0777115..6a2c5d8 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1406,7 +1406,8 @@ public final class CraftServer implements Server {
             // Spigot Start
             GameProfile profile = null;
             // Only fetch an online UUID in online mode
-            if ( MinecraftServer.getServer().getOnlineMode() || org.spigotmc.SpigotConfig.bungee )
+            if ( MinecraftServer.getServer().getOnlineMode()
+                    || (org.spigotmc.SpigotConfig.bungee && com.destroystokyo.paper.PaperConfig.bungeeOnlineMode)) // Paper - fix offline UUIDs
             {
                 profile = console.getUserCache().getProfile( name );
             }
-- 
2.8.2.windows.1

